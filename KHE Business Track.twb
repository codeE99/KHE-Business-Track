<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Group' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Brooklyn&quot;'>
        <calculation class='tableau' formula='&quot;Brooklyn&quot;' />
        <members>
          <member value='&quot;Bronx&quot;' />
          <member value='&quot;brookln&quot;' />
          <member value='&quot;Brooklyn&quot;' />
          <member value='&quot;manhatan&quot;' />
          <member value='&quot;Manhattan&quot;' />
          <member value='&quot;Queens&quot;' />
          <member value='&quot;Staten Island&quot;' />
        </members>
      </column>
      <column caption='Neighbor' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Unionport&quot;'>
        <calculation class='tableau' formula='&quot;Unionport&quot;' />
        <members>
          <member value='&quot;Allerton&quot;' />
          <member value='&quot;Arden Heights&quot;' />
          <member value='&quot;Arrochar&quot;' />
          <member value='&quot;Arverne&quot;' />
          <member value='&quot;Astoria&quot;' />
          <member value='&quot;Bath Beach&quot;' />
          <member value='&quot;Battery Park City&quot;' />
          <member value='&quot;Bay Ridge&quot;' />
          <member value='&quot;Bay Terrace&quot;' />
          <member value='&quot;Bay Terrace, Staten Island&quot;' />
          <member value='&quot;Baychester&quot;' />
          <member value='&quot;Bayside&quot;' />
          <member value='&quot;Bayswater&quot;' />
          <member value='&quot;Bedford-Stuyvesant&quot;' />
          <member value='&quot;Belle Harbor&quot;' />
          <member value='&quot;Bellerose&quot;' />
          <member value='&quot;Belmont&quot;' />
          <member value='&quot;Bensonhurst&quot;' />
          <member value='&quot;Bergen Beach&quot;' />
          <member value='&quot;Boerum Hill&quot;' />
          <member value='&quot;Borough Park&quot;' />
          <member value='&quot;Breezy Point&quot;' />
          <member value='&quot;Briarwood&quot;' />
          <member value='&quot;Brighton Beach&quot;' />
          <member value='&quot;Bronxdale&quot;' />
          <member value='&quot;Brooklyn Heights&quot;' />
          <member value='&quot;Brownsville&quot;' />
          <member value='&quot;Bull&apos;s Head&quot;' />
          <member value='&quot;Bushwick&quot;' />
          <member value='&quot;Cambria Heights&quot;' />
          <member value='&quot;Canarsie&quot;' />
          <member value='&quot;Carroll Gardens&quot;' />
          <member value='&quot;Castle Hill&quot;' />
          <member value='&quot;Castleton Corners&quot;' />
          <member value='&quot;Chelsea&quot;' />
          <member value='&quot;Chelsea, Staten Island&quot;' />
          <member value='&quot;Chinatown&quot;' />
          <member value='&quot;City Island&quot;' />
          <member value='&quot;Civic Center&quot;' />
          <member value='&quot;Claremont Village&quot;' />
          <member value='&quot;Clason Point&quot;' />
          <member value='&quot;Clifton&quot;' />
          <member value='&quot;Clinton Hill&quot;' />
          <member value='&quot;Co-op City&quot;' />
          <member value='&quot;Cobble Hill&quot;' />
          <member value='&quot;College Point&quot;' />
          <member value='&quot;Columbia St&quot;' />
          <member value='&quot;Concord&quot;' />
          <member value='&quot;Concourse&quot;' />
          <member value='&quot;Concourse Village&quot;' />
          <member value='&quot;Coney Island&quot;' />
          <member value='&quot;Corona&quot;' />
          <member value='&quot;Crown Heights&quot;' />
          <member value='&quot;Cypress Hills&quot;' />
          <member value='&quot;Ditmars Steinway&quot;' />
          <member value='&quot;Dongan Hills&quot;' />
          <member value='&quot;Douglaston&quot;' />
          <member value='&quot;Downtown Brooklyn&quot;' />
          <member value='&quot;DUMBO&quot;' />
          <member value='&quot;Dyker Heights&quot;' />
          <member value='&quot;East Elmhurst&quot;' />
          <member value='&quot;East Flatbush&quot;' />
          <member value='&quot;East Harlem&quot;' />
          <member value='&quot;East Morrisania&quot;' />
          <member value='&quot;East New York&quot;' />
          <member value='&quot;East Village&quot;' />
          <member value='&quot;Eastchester&quot;' />
          <member value='&quot;Edenwald&quot;' />
          <member value='&quot;Edgemere&quot;' />
          <member value='&quot;Elmhurst&quot;' />
          <member value='&quot;Eltingville&quot;' />
          <member value='&quot;Emerson Hill&quot;' />
          <member value='&quot;Far Rockaway&quot;' />
          <member value='&quot;Fieldston&quot;' />
          <member value='&quot;Financial District&quot;' />
          <member value='&quot;Flatbush&quot;' />
          <member value='&quot;Flatiron District&quot;' />
          <member value='&quot;Flatlands&quot;' />
          <member value='&quot;Flushing&quot;' />
          <member value='&quot;Fordham&quot;' />
          <member value='&quot;Forest Hills&quot;' />
          <member value='&quot;Fort Greene&quot;' />
          <member value='&quot;Fort Hamilton&quot;' />
          <member value='&quot;Fort Wadsworth&quot;' />
          <member value='&quot;Fresh Meadows&quot;' />
          <member value='&quot;Gerritsen Beach&quot;' />
          <member value='&quot;Glen Oaks&quot;' />
          <member value='&quot;Glendale&quot;' />
          <member value='&quot;Gowanus&quot;' />
          <member value='&quot;Gramercy&quot;' />
          <member value='&quot;Graniteville&quot;' />
          <member value='&quot;Grant City&quot;' />
          <member value='&quot;Gravesend&quot;' />
          <member value='&quot;Great Kills&quot;' />
          <member value='&quot;Greenpoint&quot;' />
          <member value='&quot;Greenwich Village&quot;' />
          <member value='&quot;Grymes Hill&quot;' />
          <member value='&quot;Harlem&quot;' />
          <member value='&quot;Hell&apos;s Kitchen&quot;' />
          <member value='&quot;Highbridge&quot;' />
          <member value='&quot;Hollis&quot;' />
          <member value='&quot;Holliswood&quot;' />
          <member value='&quot;Howard Beach&quot;' />
          <member value='&quot;Howland Hook&quot;' />
          <member value='&quot;Huguenot&quot;' />
          <member value='&quot;Hunts Point&quot;' />
          <member value='&quot;Inwood&quot;' />
          <member value='&quot;Jackson Heights&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Jamaica Estates&quot;' />
          <member value='&quot;Jamaica Hills&quot;' />
          <member value='&quot;Kensington&quot;' />
          <member value='&quot;Kew Gardens&quot;' />
          <member value='&quot;Kew Gardens Hills&quot;' />
          <member value='&quot;Kingsbridge&quot;' />
          <member value='&quot;Kips Bay&quot;' />
          <member value='&quot;Laurelton&quot;' />
          <member value='&quot;Lighthouse Hill&quot;' />
          <member value='&quot;Little Italy&quot;' />
          <member value='&quot;Little Neck&quot;' />
          <member value='&quot;Long Island City&quot;' />
          <member value='&quot;Longwood&quot;' />
          <member value='&quot;Lower East Side&quot;' />
          <member value='&quot;Manhattan Beach&quot;' />
          <member value='&quot;Marble Hill&quot;' />
          <member value='&quot;Mariners Harbor&quot;' />
          <member value='&quot;Maspeth&quot;' />
          <member value='&quot;Melrose&quot;' />
          <member value='&quot;Middle Village&quot;' />
          <member value='&quot;Midland Beach&quot;' />
          <member value='&quot;Midtown&quot;' />
          <member value='&quot;Midwood&quot;' />
          <member value='&quot;Mill Basin&quot;' />
          <member value='&quot;Morningside Heights&quot;' />
          <member value='&quot;Morris Heights&quot;' />
          <member value='&quot;Morris Park&quot;' />
          <member value='&quot;Morrisania&quot;' />
          <member value='&quot;Mott Haven&quot;' />
          <member value='&quot;Mount Eden&quot;' />
          <member value='&quot;Mount Hope&quot;' />
          <member value='&quot;Murray Hill&quot;' />
          <member value='&quot;Navy Yard&quot;' />
          <member value='&quot;Neponsit&quot;' />
          <member value='&quot;New Brighton&quot;' />
          <member value='&quot;New Dorp&quot;' />
          <member value='&quot;New Dorp Beach&quot;' />
          <member value='&quot;New Springville&quot;' />
          <member value='&quot;NoHo&quot;' />
          <member value='&quot;Nolita&quot;' />
          <member value='&quot;North Riverdale&quot;' />
          <member value='&quot;Norwood&quot;' />
          <member value='&quot;Oakwood&quot;' />
          <member value='&quot;Olinville&quot;' />
          <member value='&quot;Ozone Park&quot;' />
          <member value='&quot;Park Slope&quot;' />
          <member value='&quot;Parkchester&quot;' />
          <member value='&quot;Pelham Bay&quot;' />
          <member value='&quot;Pelham Gardens&quot;' />
          <member value='&quot;Port Morris&quot;' />
          <member value='&quot;Port Richmond&quot;' />
          <member value='&quot;Prince&apos;s Bay&quot;' />
          <member value='&quot;Prospect Heights&quot;' />
          <member value='&quot;Prospect-Lefferts Gardens&quot;' />
          <member value='&quot;Queens Village&quot;' />
          <member value='&quot;Randall Manor&quot;' />
          <member value='&quot;Red Hook&quot;' />
          <member value='&quot;Rego Park&quot;' />
          <member value='&quot;Richmond Hill&quot;' />
          <member value='&quot;Richmondtown&quot;' />
          <member value='&quot;Ridgewood&quot;' />
          <member value='&quot;Riverdale&quot;' />
          <member value='&quot;Rockaway Beach&quot;' />
          <member value='&quot;Roosevelt Island&quot;' />
          <member value='&quot;Rosebank&quot;' />
          <member value='&quot;Rosedale&quot;' />
          <member value='&quot;Rossville&quot;' />
          <member value='&quot;Schuylerville&quot;' />
          <member value='&quot;Sea Gate&quot;' />
          <member value='&quot;Sheepshead Bay&quot;' />
          <member value='&quot;Shore Acres&quot;' />
          <member value='&quot;Silver Lake&quot;' />
          <member value='&quot;SoHo&quot;' />
          <member value='&quot;Soundview&quot;' />
          <member value='&quot;South Beach&quot;' />
          <member value='&quot;South Ozone Park&quot;' />
          <member value='&quot;South Slope&quot;' />
          <member value='&quot;Springfield Gardens&quot;' />
          <member value='&quot;Spuyten Duyvil&quot;' />
          <member value='&quot;St. Albans&quot;' />
          <member value='&quot;St. George&quot;' />
          <member value='&quot;Stapleton&quot;' />
          <member value='&quot;Stuyvesant Town&quot;' />
          <member value='&quot;Sunnyside&quot;' />
          <member value='&quot;Sunset Park&quot;' />
          <member value='&quot;Theater District&quot;' />
          <member value='&quot;Throgs Neck&quot;' />
          <member value='&quot;Todt Hill&quot;' />
          <member value='&quot;Tompkinsville&quot;' />
          <member value='&quot;Tottenville&quot;' />
          <member value='&quot;Tremont&quot;' />
          <member value='&quot;Tribeca&quot;' />
          <member value='&quot;Two Bridges&quot;' />
          <member value='&quot;Unionport&quot;' />
          <member value='&quot;University Heights&quot;' />
          <member value='&quot;Upper East Side&quot;' />
          <member value='&quot;Upper West Side&quot;' />
          <member value='&quot;Van Nest&quot;' />
          <member value='&quot;Vinegar Hill&quot;' />
          <member value='&quot;Wakefield&quot;' />
          <member value='&quot;Washington Heights&quot;' />
          <member value='&quot;West Brighton&quot;' />
          <member value='&quot;West Farms&quot;' />
          <member value='&quot;West Village&quot;' />
          <member value='&quot;Westchester Square&quot;' />
          <member value='&quot;Westerleigh&quot;' />
          <member value='&quot;Whitestone&quot;' />
          <member value='&quot;Williamsbridge&quot;' />
          <member value='&quot;Williamsburg&quot;' />
          <member value='&quot;Willowbrook&quot;' />
          <member value='&quot;Windsor Terrace&quot;' />
          <member value='&quot;Woodhaven&quot;' />
          <member value='&quot;Woodlawn&quot;' />
          <member value='&quot;Woodrow&quot;' />
          <member value='&quot;Woodside&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;All&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Bayside&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bay Terrace&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bay Ridge&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='Airbnb_Open_Data (Airbnb_Open_Data)' inline='true' name='federated.1pyqdv90m04gnb1bpyly211xcn8b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Airbnb_Open_Data' name='excel-direct.0h13tds11e131o1ec1p5w15g3atj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/csher/Downloads/archive/Airbnb_Open_Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0h13tds11e131o1ec1p5w15g3atj' name='Airbnb_Open_Data' table='[Airbnb_Open_Data$]' type='table'>
          <columns gridOrigin='A1:Z10001:no:A1:Z10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='NAME' ordinal='1' />
            <column datatype='integer' name='host id' ordinal='2' />
            <column datatype='string' name='host_identity_verified' ordinal='3' />
            <column datatype='string' name='host name' ordinal='4' />
            <column datatype='string' name='neighbourhood group' ordinal='5' />
            <column datatype='string' name='neighbourhood' ordinal='6' />
            <column datatype='real' name='lat' ordinal='7' />
            <column datatype='real' name='long' ordinal='8' />
            <column datatype='string' name='country' ordinal='9' />
            <column datatype='string' name='country code' ordinal='10' />
            <column datatype='boolean' name='instant_bookable' ordinal='11' />
            <column datatype='string' name='cancellation_policy' ordinal='12' />
            <column datatype='string' name='room type' ordinal='13' />
            <column datatype='integer' name='Construction year' ordinal='14' />
            <column datatype='integer' name='price' ordinal='15' />
            <column datatype='integer' name='service fee' ordinal='16' />
            <column datatype='integer' name='minimum nights' ordinal='17' />
            <column datatype='integer' name='number of reviews' ordinal='18' />
            <column datatype='date' name='last review' ordinal='19' />
            <column datatype='real' name='reviews per month' ordinal='20' />
            <column datatype='integer' name='review rate number' ordinal='21' />
            <column datatype='integer' name='calculated host listings count' ordinal='22' />
            <column datatype='integer' name='availability 365' ordinal='23' />
            <column datatype='string' name='house_rules' ordinal='24' />
            <column datatype='string' name='license' ordinal='25' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z10001:no:A1:Z10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NAME]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host id]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>host id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_identity_verified</remote-name>
            <remote-type>130</remote-type>
            <local-name>[host_identity_verified]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>host_identity_verified</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[host name]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>host name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighbourhood group]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>neighbourhood group</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighbourhood]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>neighbourhood</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country code]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>country code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>instant_bookable</remote-name>
            <remote-type>11</remote-type>
            <local-name>[instant_bookable]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>instant_bookable</remote-alias>
            <ordinal>11</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cancellation_policy</remote-name>
            <remote-type>130</remote-type>
            <local-name>[cancellation_policy]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>cancellation_policy</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[room type]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>room type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Construction year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Construction year]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>Construction year</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>service fee</remote-name>
            <remote-type>20</remote-type>
            <local-name>[service fee]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>service fee</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum nights]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>minimum nights</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number of reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number of reviews]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>number of reviews</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last review</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last review]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>last review</remote-alias>
            <ordinal>19</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews per month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reviews per month]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>reviews per month</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review rate number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[review rate number]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>review rate number</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calculated host listings count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calculated host listings count]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>calculated host listings count</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>availability 365</remote-name>
            <remote-type>20</remote-type>
            <local-name>[availability 365]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>availability 365</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>house_rules</remote-name>
            <remote-type>130</remote-type>
            <local-name>[house_rules]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>house_rules</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>license</remote-name>
            <remote-type>130</remote-type>
            <local-name>[license]</local-name>
            <parent-name>[Airbnb_Open_Data]</parent-name>
            <remote-alias>license</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Single Listings' datatype='integer' name='[Calculation_1646628661289132049]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(IF[calculated host listings count]= 1 THEN[calculated host listings count]END)' />
      </column>
      <column caption='Multiple Listings' datatype='integer' name='[Calculation_1646628661289951250]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(IF[calculated host listings count]&gt;=2 THEN [calculated host listings count] END)' />
      </column>
      <column caption='Restrictions' datatype='boolean' name='[Calculation_1646628661294108691]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS([house_rules], &quot;no smoking&quot;)' />
      </column>
      <column caption='Neighborhood' datatype='string' name='[Calculation_1646628661346648088]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column caption='Neighborhood Locations' datatype='string' name='[Calculation_1646628661347622937]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE  [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Neighborhood Group&apos; THEN [neighbourhood group]&#13;&#10;WHEN &apos;Room Type&apos; THEN [room type]&#13;&#10;WHEN &apos;License&apos;THEN [license]&#13;&#10;ELSE &apos;&apos;&#13;&#10;END' />
      </column>
      <column caption='Group_Filter' datatype='string' name='[Calculation_1646628661355356187]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1]==[neighbourhood group] then [neighbourhood group] end' />
      </column>
      <column caption='Neighborhood_Filter' datatype='string' name='[Calculation_1646628661359689756]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 2] == [neighbourhood] then [neighbourhood] end' />
      </column>
      <column datatype='integer' name='[Construction year]' role='dimension' type='quantitative' />
      <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
      <column caption='Airbnb_Open_Data' datatype='table' name='[__tableau_internal_object_id__].[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]' role='measure' type='quantitative' />
      <column caption='Availability 365' datatype='integer' name='[availability 365]' role='measure' type='quantitative' />
      <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated host listings count]' role='measure' type='quantitative' />
      <column caption='Cancellation Policy' datatype='string' name='[cancellation_policy]' role='dimension' type='nominal' />
      <column caption='Country Code' datatype='string' name='[country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Host Id' datatype='integer' name='[host id]' role='dimension' type='ordinal' />
      <column caption='Host Name' datatype='string' name='[host name]' role='dimension' type='nominal' />
      <column caption='Host Identity Verified' datatype='string' name='[host_identity_verified]' role='dimension' type='nominal' />
      <column caption='House Rules' datatype='string' name='[house_rules]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Instant Bookable' datatype='boolean' name='[instant_bookable]' role='dimension' type='nominal' />
      <column caption='Last Review' datatype='date' name='[last review]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='License' datatype='string' name='[license]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Minimum Nights' datatype='integer' name='[minimum nights]' role='measure' type='quantitative' />
      <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
      <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
      <column caption='Number Of Reviews' datatype='integer' name='[number of reviews]' role='measure' type='quantitative' />
      <column aggregation='Stdev' caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Review Rate Number' datatype='integer' name='[review rate number]' role='measure' type='quantitative' />
      <column caption='Reviews Per Month' datatype='real' name='[reviews per month]' role='measure' type='quantitative' />
      <column caption='Room Type' datatype='string' name='[room type]' role='dimension' type='nominal' />
      <column caption='Service Fee' datatype='integer' name='[service fee]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73:qk]' pivot='key' type='quantitative' />
      <column-instance column='[availability 365]' derivation='Avg' name='[avg:availability 365:qk]' pivot='key' type='quantitative' />
      <column-instance column='[number of reviews]' derivation='Avg' name='[avg:number of reviews:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[number of reviews]' derivation='Count' name='[cnt:number of reviews:qk]' pivot='key' type='quantitative' />
      <column-instance column='[country code]' derivation='None' name='[none:country code:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[neighbourhood group]' derivation='None' name='[none:neighbourhood group:nk]' pivot='key' type='nominal' />
      <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
      <column-instance column='[price]' derivation='Stdev' name='[std:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[availability 365]' derivation='Sum' name='[sum:availability 365:qk]' pivot='key' type='quantitative' />
      <column-instance column='[calculated host listings count]' derivation='Sum' name='[sum:calculated host listings count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[minimum nights]' derivation='Sum' name='[sum:minimum nights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[number of reviews]' derivation='Sum' name='[sum:number of reviews:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[review rate number]' derivation='Sum' name='[sum:review rate number:qk]' pivot='key' type='quantitative' />
      <column-instance column='[reviews per month]' derivation='Sum' name='[sum:reviews per month:qk]' pivot='key' type='quantitative' />
      <column-instance column='[service fee]' derivation='Sum' name='[sum:service fee:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1646628661289132049]' derivation='User' name='[usr:Calculation_1646628661289132049:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1646628661289951250]' derivation='User' name='[usr:Calculation_1646628661289951250:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Neighbourhood Group)' hidden='true' name='[Action (Neighbourhood Group)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[neighbourhood group]' />
        </groupfilter>
      </group>
      <group caption='Action (Neighbourhood Group,Neighbourhood)' hidden='true' name='[Action (Neighbourhood Group,Neighbourhood)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[neighbourhood group]' />
          <groupfilter function='level-members' level='[neighbourhood]' />
        </groupfilter>
      </group>
      <group caption='Action (Room Type)' hidden='true' name='[Action (Room Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[room type]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Country,Country Code)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:country:nk]' />
          <groupfilter function='level-members' level='[none:country code:nk]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/csher/AppData/Local/Temp/TableauTemp/#TableauTemp_13hc1n31ls30uq13a4h2t0epwzx1.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/16/2025 01:46:52 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>0</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>102599</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NAME</remote-alias>
              <ordinal>1</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>75767</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>host id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[host id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>host id</remote-alias>
              <ordinal>2</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>102599</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>host_identity_verified</remote-name>
              <remote-type>129</remote-type>
              <local-name>[host_identity_verified]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>host_identity_verified</remote-alias>
              <ordinal>3</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>host name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[host name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>host name</remote-alias>
              <ordinal>4</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9469</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>neighbourhood group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[neighbourhood group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>neighbourhood group</remote-alias>
              <ordinal>5</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>neighbourhood</remote-name>
              <remote-type>129</remote-type>
              <local-name>[neighbourhood]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>neighbourhood</remote-alias>
              <ordinal>6</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>534</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>7</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27363</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>long</remote-alias>
              <ordinal>8</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25667</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>9</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country code</remote-alias>
              <ordinal>10</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>instant_bookable</remote-name>
              <remote-type>11</remote-type>
              <local-name>[instant_bookable]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>instant_bookable</remote-alias>
              <ordinal>11</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cancellation_policy</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cancellation_policy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cancellation_policy</remote-alias>
              <ordinal>12</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[room type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room type</remote-alias>
              <ordinal>13</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Construction year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Construction year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Construction year</remote-alias>
              <ordinal>14</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price</remote-name>
              <remote-type>20</remote-type>
              <local-name>[price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price</remote-alias>
              <ordinal>15</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4539</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>service fee</remote-name>
              <remote-type>20</remote-type>
              <local-name>[service fee]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>service fee</remote-alias>
              <ordinal>16</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>306</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>minimum nights</remote-name>
              <remote-type>20</remote-type>
              <local-name>[minimum nights]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>minimum nights</remote-alias>
              <ordinal>17</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>124</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>number of reviews</remote-name>
              <remote-type>20</remote-type>
              <local-name>[number of reviews]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>number of reviews</remote-alias>
              <ordinal>18</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>576</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>last review</remote-name>
              <remote-type>133</remote-type>
              <local-name>[last review]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>last review</remote-alias>
              <ordinal>19</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3658</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reviews per month</remote-name>
              <remote-type>5</remote-type>
              <local-name>[reviews per month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>reviews per month</remote-alias>
              <ordinal>20</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1934</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>review rate number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[review rate number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>review rate number</remote-alias>
              <ordinal>21</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>calculated host listings count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[calculated host listings count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>calculated host listings count</remote-alias>
              <ordinal>22</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>246</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>availability 365</remote-name>
              <remote-type>20</remote-type>
              <local-name>[availability 365]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>availability 365</remote-alias>
              <ordinal>23</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1418</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>house_rules</remote-name>
              <remote-type>129</remote-type>
              <local-name>[house_rules]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>house_rules</remote-alias>
              <ordinal>24</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5980</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>license</remote-name>
              <remote-type>129</remote-type>
              <local-name>[license]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>license</remote-alias>
              <ordinal>25</ordinal>
              <family>Airbnb_Open_Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:neighbourhood group:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;manhatan&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Queens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;brookln&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Staten Island&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:neighbourhood:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Battery Park City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bull&apos;s Head&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Edenwald&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Little Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melrose&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NoHo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Richmond Hill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spuyten Duyvil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vinegar Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boerum Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Claremont Village&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dyker Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fordham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Highbridge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jackson Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Little Neck&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mount Hope&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Port Richmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shore Acres&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tremont&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Windsor Terrace&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arrochar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brighton Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Co-op City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Morrisania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fort Wadsworth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Howland Hook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manhattan Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Brighton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Queens Village&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodside&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baychester&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carroll Gardens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Corona&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Emerson Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grant City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kensington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Midwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oakwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rockaway Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stuyvesant Town&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Farms&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bay Ridge&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bushwick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Concourse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Edgemere&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gowanus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Middle Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nolita&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Richmondtown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Albans&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wakefield&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arverne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bronxdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cobble Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East New York&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fresh Meadows&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Huguenot&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marble Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Dorp&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Randall Manor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Ozone Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Upper East Side&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;City Island&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Downtown Brooklyn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Flatlands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harlem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lighthouse Hill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mott Haven&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pelham Gardens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sea Gate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tompkinsville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>%null%</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Borough Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clason Point&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Elmhurst&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Forest Hills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hollis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Long Island City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Murray Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prince&apos;s Bay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Silver Lake&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tribeca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Woodhaven&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belle Harbor&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chelsea, Staten Island&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dongan Hills&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flatbush&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenwich Village&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kips Bay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morris Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Parkchester&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rossville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Throgs Neck&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Whitestone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Astoria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;College Point&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gerritsen Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hunts Point&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mariners Harbor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Dorp Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Red Hook&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Slope&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Upper West Side&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bayside&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Castle Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crown Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Far Rockaway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gravesend&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kew Gardens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mill Basin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Olinville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roosevelt Island&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunnyside&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Village&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bayswater&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Castleton Corners&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cypress Hills&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fieldston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Great Kills&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morningside Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ozone Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rosebank&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sunset Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westchester Square&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellerose&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chinatown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Douglaston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flatiron District&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grymes Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laurelton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morrisania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pelham Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Schuylerville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Todt Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsbridge&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bensonhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bergen Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Civic Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DUMBO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Flushing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hell&apos;s Kitchen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mount Eden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Port Morris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tottenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Willowbrook&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bay Terrace&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambria Heights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Concourse Village&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gramercy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica Estates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Midland Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Riverdale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ridgewood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. George&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bath Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eastchester&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Glen Oaks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Inwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maspeth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Springville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rego Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Springfield Gardens&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Van Nest&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allerton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Breezy Point&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Flatbush&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fort Greene&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Holliswood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Longwood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Navy Yard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prospect Heights&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SoHo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Two Bridges&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woodlawn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bedford-Stuyvesant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ditmars Steinway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Financial District&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenpoint&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kingsbridge&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morris Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Slope&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rosedale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Theater District&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westerleigh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bay Terrace, Staten Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canarsie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coney Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eltingville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Graniteville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamaica Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Midtown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norwood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Riverdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stapleton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Brighton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arden Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Briarwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clinton Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fort Hamilton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Howard Beach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lower East Side&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Neponsit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Soundview&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Unionport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodrow&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[sum:reviews per month:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[avg:number of reviews:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[cnt:number of reviews:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[sum:number of reviews:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[usr:Calculation_1646628661289951250:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[usr:Calculation_1646628661258678272:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[sum:service fee:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[__tableau_internal_object_id__].[cnt:Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[avg:availability 365:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[sum:availability 365:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[sum:minimum nights:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[usr:Calculation_1646628661260566530:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[usr:Calculation_1646628661289132049:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[sum:review rate number:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[avg:price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[std:price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[sum:price:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1pyqdv90m04gnb1bpyly211xcn8b].[sum:calculated host listings count:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='id' />
        <field-sort-custom-order field='NAME' />
        <field-sort-custom-order field='host id' />
        <field-sort-custom-order field='Host Id (copy)_1646628661280772106' />
        <field-sort-custom-order field='Host Id (copy)_1646628661280538633' />
        <field-sort-custom-order field='Host Id (copy)_1646628661268672518' />
        <field-sort-custom-order field='Host Id (copy)_1646628661265526788' />
        <field-sort-custom-order field='host_identity_verified' />
        <field-sort-custom-order field='host name' />
        <field-sort-custom-order field='Host Name (copy)_1646628661278322696' />
        <field-sort-custom-order field='Host Name (copy)_1646628661265670149' />
        <field-sort-custom-order field='Host Name (copy)_1646628661262491651' />
        <field-sort-custom-order field='neighbourhood group' />
        <field-sort-custom-order field='neighbourhood' />
        <field-sort-custom-order field='lat' />
        <field-sort-custom-order field='long' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='country code' />
        <field-sort-custom-order field='instant_bookable' />
        <field-sort-custom-order field='cancellation_policy' />
        <field-sort-custom-order field='room type' />
        <field-sort-custom-order field='Construction year' />
        <field-sort-custom-order field='price' />
        <field-sort-custom-order field='service fee' />
        <field-sort-custom-order field='minimum nights' />
        <field-sort-custom-order field='number of reviews' />
        <field-sort-custom-order field='last review' />
        <field-sort-custom-order field='reviews per month' />
        <field-sort-custom-order field='review rate number' />
        <field-sort-custom-order field='calculated host listings count' />
        <field-sort-custom-order field='Calculated Host Listings Count (copy)_1646628661285240845' />
        <field-sort-custom-order field='availability 365' />
        <field-sort-custom-order field='house_rules' />
        <field-sort-custom-order field='license' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Calculation_1646628661258678272' />
        <field-sort-custom-order field='Calculation_1646628661260451841' />
        <field-sort-custom-order field='Calculation_1646628661260566530' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Group' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Brooklyn&quot;'>
          <calculation class='tableau' formula='&quot;Brooklyn&quot;' />
        </column>
        <column caption='Neighbor' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Unionport&quot;'>
          <calculation class='tableau' formula='&quot;Unionport&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Airbnb_Open_Data' id='Airbnb!Open!Data_DA04EF38BAE14EB995997B3251EE6A73'>
            <properties context=''>
              <relation connection='excel-direct.0h13tds11e131o1ec1p5w15g3atj' name='Airbnb_Open_Data' table='[Airbnb_Open_Data$]' type='table'>
                <columns gridOrigin='A1:Z10001:no:A1:Z10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='NAME' ordinal='1' />
                  <column datatype='integer' name='host id' ordinal='2' />
                  <column datatype='string' name='host_identity_verified' ordinal='3' />
                  <column datatype='string' name='host name' ordinal='4' />
                  <column datatype='string' name='neighbourhood group' ordinal='5' />
                  <column datatype='string' name='neighbourhood' ordinal='6' />
                  <column datatype='real' name='lat' ordinal='7' />
                  <column datatype='real' name='long' ordinal='8' />
                  <column datatype='string' name='country' ordinal='9' />
                  <column datatype='string' name='country code' ordinal='10' />
                  <column datatype='boolean' name='instant_bookable' ordinal='11' />
                  <column datatype='string' name='cancellation_policy' ordinal='12' />
                  <column datatype='string' name='room type' ordinal='13' />
                  <column datatype='integer' name='Construction year' ordinal='14' />
                  <column datatype='integer' name='price' ordinal='15' />
                  <column datatype='integer' name='service fee' ordinal='16' />
                  <column datatype='integer' name='minimum nights' ordinal='17' />
                  <column datatype='integer' name='number of reviews' ordinal='18' />
                  <column datatype='date' name='last review' ordinal='19' />
                  <column datatype='real' name='reviews per month' ordinal='20' />
                  <column datatype='integer' name='review rate number' ordinal='21' />
                  <column datatype='integer' name='calculated host listings count' ordinal='22' />
                  <column datatype='integer' name='availability 365' ordinal='23' />
                  <column datatype='string' name='house_rules' ordinal='24' />
                  <column datatype='string' name='license' ordinal='25' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Avail. vs Neighborhood'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='12'>Neighborhood Availability</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Airbnb_Open_Data (Airbnb_Open_Data)' name='federated.1pyqdv90m04gnb1bpyly211xcn8b' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Group' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Brooklyn&quot;'>
              <calculation class='tableau' formula='&quot;Brooklyn&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pyqdv90m04gnb1bpyly211xcn8b'>
            <column caption='Group_Filter' datatype='string' name='[Calculation_1646628661355356187]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1]==[neighbourhood group] then [neighbourhood group] end' />
            </column>
            <column caption='Availability 365' datatype='integer' name='[availability 365]' role='measure' type='quantitative' />
            <column-instance column='[availability 365]' derivation='Avg' name='[avg:availability 365:qk]' pivot='key' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1646628661355356187]' derivation='None' name='[none:Calculation_1646628661355356187:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood group]' derivation='None' name='[none:neighbourhood group:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group)]'>
            <groupfilter function='level-members' level='[neighbourhood group]' user:ui-action-filter='[Action1_818DFB05B6AE42C3BF37740A991BC12C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1646628661355356187:nk]' />
              <groupfilter function='member' level='[none:Calculation_1646628661355356187:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:neighbourhood group:nk]' />
              <groupfilter function='member' level='[none:neighbourhood group:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group)]</column>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood group:nk]</column>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood:nk]' value='58' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-color' value='#0055ff' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[avg:availability 365:qk]</rows>
        <cols>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood:nk]</cols>
      </table>
      <simple-id uuid='{95F28BF4-619D-429A-8CD7-8CB324DEADF5}' />
    </worksheet>
    <worksheet name='Aver.Price per Neighborhood Group'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='9'>Average Price per Neighbourhood Group</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Airbnb_Open_Data (Airbnb_Open_Data)' name='federated.1pyqdv90m04gnb1bpyly211xcn8b' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Group' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Brooklyn&quot;'>
              <calculation class='tableau' formula='&quot;Brooklyn&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pyqdv90m04gnb1bpyly211xcn8b'>
            <column caption='Group_Filter' datatype='string' name='[Calculation_1646628661355356187]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1]==[neighbourhood group] then [neighbourhood group] end' />
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1646628661355356187]' derivation='None' name='[none:Calculation_1646628661355356187:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood group]' derivation='None' name='[none:neighbourhood group:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column aggregation='Stdev' caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group)]'>
            <groupfilter function='level-members' level='[neighbourhood group]' user:ui-action-filter='[Action3_21530538F3D847F2973D4A31AE833929]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group,Neighbourhood)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_243A0E90E0A144E885D60A1693B8BD15]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[neighbourhood group]' />
              <groupfilter function='level-members' level='[neighbourhood]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Room Type)]'>
            <groupfilter function='level-members' level='[room type]' user:ui-action-filter='[Action1_3D89E0390BF24483A64C69D3F595CD4D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1646628661355356187:nk]' />
              <groupfilter function='member' level='[none:Calculation_1646628661355356187:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Room Type)]</column>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group)]</column>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group,Neighbourhood)]</column>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#dbe9ee' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
            <format attr='border-color' value='#0055ff' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood group:nk] / [federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{2268EA6A-81F9-40E5-BBDC-F110DD3FE7A7}' />
    </worksheet>
    <worksheet name='Comparing the Room Type to the Number of Reviews'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Airbnb_Open_Data (Airbnb_Open_Data)' name='federated.1pyqdv90m04gnb1bpyly211xcn8b' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Group' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Brooklyn&quot;'>
              <calculation class='tableau' formula='&quot;Brooklyn&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pyqdv90m04gnb1bpyly211xcn8b'>
            <column caption='Group_Filter' datatype='string' name='[Calculation_1646628661355356187]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1]==[neighbourhood group] then [neighbourhood group] end' />
            </column>
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1646628661355356187]' derivation='None' name='[none:Calculation_1646628661355356187:nk]' pivot='key' type='nominal' />
            <column-instance column='[room type]' derivation='None' name='[none:room type:nk]' pivot='key' type='nominal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number of reviews]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room type]' role='dimension' type='nominal' />
            <column-instance column='[number of reviews]' derivation='Sum' name='[sum:number of reviews:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group)]'>
            <groupfilter function='level-members' level='[neighbourhood group]' user:ui-action-filter='[Action4_E0BE4243E423425983A5765B4AB8C324]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1646628661355356187:nk]' />
              <groupfilter function='member' level='[none:Calculation_1646628661355356187:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group)]</column>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-color' value='#0055ff' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[sum:number of reviews:qk]</rows>
        <cols>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:room type:nk]</cols>
      </table>
      <simple-id uuid='{1A93F179-B453-4553-AADF-0BE42A18532E}' />
    </worksheet>
    <worksheet name='Host Activity'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='10'>&lt;Sheet Name&gt;</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='10'>Single Listings vs Multiple Listings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Airbnb_Open_Data (Airbnb_Open_Data)' name='federated.1pyqdv90m04gnb1bpyly211xcn8b' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Group' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Brooklyn&quot;'>
              <calculation class='tableau' formula='&quot;Brooklyn&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pyqdv90m04gnb1bpyly211xcn8b'>
            <column caption='Single Listings' datatype='integer' name='[Calculation_1646628661289132049]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(IF[calculated host listings count]= 1 THEN[calculated host listings count]END)' />
            </column>
            <column caption='Multiple Listings' datatype='integer' name='[Calculation_1646628661289951250]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(IF[calculated host listings count]&gt;=2 THEN [calculated host listings count] END)' />
            </column>
            <column caption='Group_Filter' datatype='string' name='[Calculation_1646628661355356187]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1]==[neighbourhood group] then [neighbourhood group] end' />
            </column>
            <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated host listings count]' role='measure' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1646628661355356187]' derivation='None' name='[none:Calculation_1646628661355356187:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood group]' derivation='None' name='[none:neighbourhood group:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1646628661289132049]' derivation='User' name='[usr:Calculation_1646628661289132049:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1646628661289951250]' derivation='User' name='[usr:Calculation_1646628661289951250:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group)]'>
            <groupfilter function='level-members' level='[neighbourhood group]' user:ui-action-filter='[Action4_E0BE4243E423425983A5765B4AB8C324]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Room Type)]'>
            <groupfilter function='level-members' level='[room type]' user:ui-action-filter='[Action1_3D89E0390BF24483A64C69D3F595CD4D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1646628661355356187:nk]' member='%null%' />
              <groupfilter function='member' level='[none:Calculation_1646628661355356187:nk]' member='&quot;Bronx&quot;' />
              <groupfilter function='member' level='[none:Calculation_1646628661355356187:nk]' member='&quot;brookln&quot;' />
              <groupfilter function='member' level='[none:Calculation_1646628661355356187:nk]' member='&quot;Brooklyn&quot;' />
              <groupfilter function='member' level='[none:Calculation_1646628661355356187:nk]' member='&quot;manhatan&quot;' />
              <groupfilter function='member' level='[none:Calculation_1646628661355356187:nk]' member='&quot;Manhattan&quot;' />
              <groupfilter function='member' level='[none:Calculation_1646628661355356187:nk]' member='&quot;Queens&quot;' />
              <groupfilter function='member' level='[none:Calculation_1646628661355356187:nk]' member='&quot;Staten Island&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Room Type)]</column>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group)]</column>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
            <format attr='border-color' value='#0055ff' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[usr:Calculation_1646628661289132049:qk]' />
              <text column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood group:nk]' />
              <text column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood:nk]' />
              <color column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[usr:Calculation_1646628661289951250:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C1B21DCB-781E-4732-AF5A-249B1E81A731}' />
    </worksheet>
    <worksheet name='Residence Size'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Airbnb_Open_Data (Airbnb_Open_Data)' name='federated.1pyqdv90m04gnb1bpyly211xcn8b' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Group' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Brooklyn&quot;'>
              <calculation class='tableau' formula='&quot;Brooklyn&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pyqdv90m04gnb1bpyly211xcn8b'>
            <column caption='Group_Filter' datatype='string' name='[Calculation_1646628661355356187]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1]==[neighbourhood group] then [neighbourhood group] end' />
            </column>
            <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated host listings count]' role='measure' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1646628661355356187]' derivation='None' name='[none:Calculation_1646628661355356187:nk]' pivot='key' type='nominal' />
            <column-instance column='[room type]' derivation='None' name='[none:room type:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room type]' role='dimension' type='nominal' />
            <column-instance column='[calculated host listings count]' derivation='Sum' name='[sum:calculated host listings count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group)]'>
            <groupfilter function='level-members' level='[neighbourhood group]' user:ui-action-filter='[Action4_E0BE4243E423425983A5765B4AB8C324]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group,Neighbourhood)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_243A0E90E0A144E885D60A1693B8BD15]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[neighbourhood group]' />
              <groupfilter function='level-members' level='[neighbourhood]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Room Type)]'>
            <groupfilter function='level-members' level='[room type]' user:ui-action-filter='[Action3_6541A9C4CDAA4548804711126F480A62]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1646628661355356187:nk]' />
              <groupfilter function='member' level='[none:Calculation_1646628661355356187:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Room Type)]</column>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group)]</column>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group,Neighbourhood)]</column>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='79' />
            <format attr='height' field='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:room type:nk]' value='25' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#dbe9ee' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
            <format attr='border-color' value='#0055ff' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[sum:calculated host listings count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:room type:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{E3423168-89F9-40B9-A621-2BF2C8C50D0D}' />
    </worksheet>
    <worksheet name='Reviews vs Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Airbnb_Open_Data (Airbnb_Open_Data)' name='federated.1pyqdv90m04gnb1bpyly211xcn8b' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Group' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Brooklyn&quot;'>
              <calculation class='tableau' formula='&quot;Brooklyn&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pyqdv90m04gnb1bpyly211xcn8b'>
            <column caption='Group_Filter' datatype='string' name='[Calculation_1646628661355356187]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1]==[neighbourhood group] then [neighbourhood group] end' />
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1646628661355356187]' derivation='None' name='[none:Calculation_1646628661355356187:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood group]' derivation='None' name='[none:neighbourhood group:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number of reviews]' role='measure' type='quantitative' />
            <column aggregation='Stdev' caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[number of reviews]' derivation='Sum' name='[sum:number of reviews:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group)]'>
            <groupfilter function='level-members' level='[neighbourhood group]' user:ui-action-filter='[Action1_818DFB05B6AE42C3BF37740A991BC12C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1646628661355356187:nk]' />
              <groupfilter function='member' level='[none:Calculation_1646628661355356187:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood group:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:neighbourhood group:nk]' />
              <groupfilter function='member' level='[none:neighbourhood group:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[Action (Neighbourhood Group)]</column>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood group:nk]</column>
            <column>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood group:nk]' value='#dbe9ee' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood group:nk]' value='Tableau Bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[avg:price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-color' value='#0055ff' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[avg:price:qk]' />
              <color column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[avg:price:qk]' />
              <text column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood:nk]' />
              <lod column='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[sum:number of reviews:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood group:nk]</cols>
      </table>
      <simple-id uuid='{35631BA0-07B9-4F8A-922D-1B6AF2C425E9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='The Air BnB&apos;s of New York: Stats and Facts'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Group' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Brooklyn&quot;'>
          <calculation class='tableau' formula='&quot;Brooklyn&quot;' />
          <members>
            <member value='&quot;Bronx&quot;' />
            <member value='&quot;brookln&quot;' />
            <member value='&quot;Brooklyn&quot;' />
            <member value='&quot;manhatan&quot;' />
            <member value='&quot;Manhattan&quot;' />
            <member value='&quot;Queens&quot;' />
            <member value='&quot;Staten Island&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97858' id='46' param='horz' type-v2='layout-flow' w='99004' x='498' y='1071'>
            <zone h='97858' id='44' type-v2='layout-basic' w='99004' x='498' y='1071'>
              <zone h='97858' id='24' type-v2='empty' w='99004' x='498' y='1071'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ddebf0' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='5355' id='39' param='horz' type-v2='layout-flow' w='33333' x='685' y='5622'>
          <zone forceUpdate='true' h='5355' id='29' type-v2='text' w='33333' x='685' y='5622'>
            <formatted-text>
              <run fontname='Tableau Bold'>Select your neighbourhood group:</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#0055ff' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='4' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='3347' id='14' mode='compact' param='[Parameters].[Parameter 1]' show-title='false' type-v2='paramctrl' w='9969' x='16636' y='6827' />
        <zone h='4418' id='37' param='horz' type-v2='layout-flow' w='99003' x='436' y='1071'>
          <zone forceUpdate='true' h='4418' id='38' type-v2='text' w='99003' x='436' y='1071'>
            <formatted-text>
              <run fontcolor='#ffffff' fontname='Tableau Semibold' fontsize='12'>The Air BnB&apos;s of New York: Stats and Facts</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#0055ff' />
          </zone-style>
        </zone>
        <zone h='59705' id='40' param='vert' type-v2='layout-flow' w='40062' x='58941' y='6827'>
          <zone fixed-size='697' h='59437' id='41' is-fixed='true' name='Reviews vs Price' w='39938' x='59003' y='6961'>
            <layout-cache type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#0055ff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='29853' id='42' param='vert' type-v2='layout-flow' w='33084' x='872' y='11379'>
          <zone fixed-size='183' h='25569' id='43' is-fixed='true' name='Residence Size' w='33084' x='872' y='11379'>
            <layout-cache type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='57564' id='47' name='Host Activity' w='32648' x='1059' y='38286'>
          <zone-style>
            <format attr='border-color' value='#0055ff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='27845' id='48' name='Avail. vs Neighborhood' w='63676' x='35202' y='68139'>
          <zone-style>
            <format attr='border-color' value='#0055ff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='59973' id='49' name='Comparing the Room Type to the Number of Reviews' w='22492' x='35140' y='6827'>
          <zone-style>
            <format attr='border-color' value='#0055ff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='22356' id='53' name='Aver.Price per Neighborhood Group' w='18505' x='15078' y='12048'>
          <zone-style>
            <format attr='border-color' value='#0055ff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='77' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97858' id='76' param='vert' type-v2='layout-flow' w='99004' x='498' y='1071'>
                <zone forceUpdate='true' h='4418' id='38' type-v2='text' w='99003' x='436' y='1071'>
                  <formatted-text>
                    <run fontcolor='#ffffff' fontname='Tableau Semibold' fontsize='12'>The Air BnB&apos;s of New York: Stats and Facts</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5355' id='29' type-v2='text' w='33333' x='685' y='5622'>
                  <formatted-text>
                    <run fontname='Tableau Bold'>Select your neighbourhood group:</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#0055ff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='4' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3347' id='14' mode='compact' param='[Parameters].[Parameter 1]' show-title='false' type-v2='paramctrl' w='9969' x='16636' y='6827'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59973' id='49' is-fixed='true' name='Comparing the Room Type to the Number of Reviews' w='22492' x='35140' y='6827'>
                  <zone-style>
                    <format attr='border-color' value='#0055ff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59437' id='41' is-fixed='true' name='Reviews vs Price' w='39938' x='59003' y='6961'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='195' h='25569' id='43' is-fixed='true' name='Residence Size' w='33084' x='872' y='11379'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='177' h='22356' id='53' is-fixed='true' name='Aver.Price per Neighborhood Group' w='18505' x='15078' y='12048'>
                  <zone-style>
                    <format attr='border-color' value='#0055ff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57564' id='47' is-fixed='true' name='Host Activity' w='32648' x='1059' y='38286'>
                  <zone-style>
                    <format attr='border-color' value='#0055ff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='221' h='27845' id='48' is-fixed='true' name='Avail. vs Neighborhood' w='63676' x='35202' y='68139'>
                  <zone-style>
                    <format attr='border-color' value='#0055ff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3BE87572-E3BC-4137-A9CE-602CDE2C26A6}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Residence Size'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661323579413:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661359689756:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood group:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:room type:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[sum:calculated host listings count:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E1ABE53-CA9E-4FC0-8CB6-B33C0D6A2694}' />
    </window>
    <window class='worksheet' name='Aver.Price per Neighborhood Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[:Measure Names]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661359689756:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood group:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FFE1EB12-CF9E-415B-90A3-A2C66738C2B8}' />
    </window>
    <window class='worksheet' name='Avail. vs Neighborhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661321003028:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661323579413:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661334904854:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661346648088:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661359689756:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood group:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E92BEE80-9296-4B51-82E7-C77174BF6F40}' />
    </window>
    <window class='worksheet' name='Host Activity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[usr:Calculation_1646628661289951250:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[:Measure Names]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661282369547:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661283897356:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661285531662:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661285797903:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661321003028:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661323579413:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661334904854:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661359689756:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Host Id (copy)_1646628661280538633:ok]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Host Id (copy)_1646628661280772106:ok]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Host Name (copy)_1646628661262491651:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Host Name (copy)_1646628661278322696:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:host id:ok]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:host name:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:host_identity_verified:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:id:ok]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood group:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEB739E9-A174-4956-97D5-A4B52FD88E35}' />
    </window>
    <window class='worksheet' name='Reviews vs Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1pyqdv90m04gnb1bpyly211xcn8b].[avg:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[:Measure Names]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661321003028:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661323579413:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661334904854:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661346648088:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661359689756:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood group:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[sum:number of reviews:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38237BDF-C2A2-49C1-8C0C-D61412FF7693}' />
    </window>
    <window class='worksheet' name='Comparing the Room Type to the Number of Reviews'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[mn:last review:ok]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661321003028:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661323579413:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661334904854:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661355356187:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:Calculation_1646628661359689756:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:last review:qk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood group:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:neighbourhood:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[none:room type:nk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[tmn:last review:qk]</field>
            <field>[federated.1pyqdv90m04gnb1bpyly211xcn8b].[yr:last review:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EBFB787D-AC5A-4CF5-BE18-80D1D4F92552}' />
    </window>
    <window class='dashboard' maximized='true' name='The Air BnB&apos;s of New York: Stats and Facts'>
      <viewpoints>
        <viewpoint name='Avail. vs Neighborhood'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Aver.Price per Neighborhood Group'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Comparing the Room Type to the Number of Reviews'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Host Activity'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Residence Size' />
        <viewpoint name='Reviews vs Price'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='43' />
      <device-preview visible='true' />
      <simple-id uuid='{CE9669E2-40D1-49CF-91EC-F8CD57A8FDBB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avail. vs Neighborhood' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Aver.Price per Neighborhood Group' width='192'>
      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
      L/885VXh/wB7OPu8zAQAIQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Comparing the Room Type to the Number of Reviews' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Host Activity' width='192'>
      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
      zzXHZ1T8fw7YbDz76/vzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='108' name='Residence Size' width='192'>
      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
      a7wv+P/ndeRCerAMIAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Reviews vs Price' width='192'>
      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
      2/X/ATCOTw+QOGkqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='The Air BnB&apos;s of New York: Stats and Facts' width='192'>
      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
      YxoG4SPBEQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
